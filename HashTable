import random
import matplotlib.pyplot as plt
import numpy as np

class HashTable():
    def __init__(self, length):
        self.array = [None]*length
        self.h = lambda x: x % length
    def size(self):
        counter = 0
        for i in self.array:
            if i is not None:
                if self.array[i] is not None:
                    counter+=1
        return counter
    def put(self, key, value):
        index = self.h(key)
        if self.array[index] is not None:
            for i in self.array[index]:
                if i[0]==key:
                    i[1] = value
                    break
            else:
                self.array[index].append([key, value])
        else:
            self.array[index]=[]
            self.array[index].append([key, value])
    def get(self,key):
        index = self.h(key)
        if self.array[index] is None:
            return None
        else:
            for i in self.array[index]:
                if i[0] == key:
                    return i[1]
        return None
    def probe(self, key):
        index = self.h(key)
        if self.array[index] is not None:
            knew = self.array[index][0][0]
            if knew == key:
                return True
        return False
    def delete(self, key):
        index = self.h(key)
        (knew, vnew) = self.array[index]
        if knew == key:
            self.array[array_loc] = None
    def all_keys(self):
        keylist = []
        for i in self.array:
            if i is not None:
                keylist.append(i[0][0])
        return keylist
